---
name: Invoke an Ansible docs build
description: Builds the docs. Requires initialized build environment.
inputs:
  build-script:
    description: The path to the build script.
    required: false
    default: ${{ runner.temp }}/docsbuild/build.sh
  build-html:
    description: The path where the build script will output the HTML.
    required: false
    default: ${{ runner.temp }}/docsbuild/build/html
  copy-build:
    description: |
      If set, copy the built HTML files to this path after building, and set the build-html output to this path instead.
      This is useful if you need to do multiple builds from the same environment, or otherwise need the files to be elsewhere.
      Note: files in the destination that do not exist in the source will be deleted!
    required: false
  artifact-upload:
    description: If true then upload the rendered docs as a build artifact.
    required: false
    default: 'true'
  artifact-name:
    description: The name of the build artifact.
    required: false
    default: ${{ github.event.repository.name }}_docs
  artifact-retention-days:
    description: Number of days to keep the artifact.
    required: false
    default: '7'
outputs:
  hash:
    description: The hash of the generated docs. This will be empty unless the build-html path is within the Workspace.
    value: ${{ steps.outs.outputs.hash }}
  artifact-url:
    description: The URL to the artifact.
    value: ${{ steps.outs.outputs.artifact-url }}
  artifact-name:
    description: The name of the uploaded artifact.
    value: ${{ inputs.artifact-name }}
  build-html:
    description: The end location of the built HTML files.
    value: ${{ steps.build.outputs.build-html }}
runs:
  using: composite
  steps:
    - name: Invoke build
      id: build
      shell: bash
      env:
        _INPUT_BUILD_SCRIPT: ${{ inputs.build-script }}
        _INPUT_BUILD_HTML: ${{ inputs.build-html }}
        _INPUT_COPY_BUILD: ${{ inputs.copy-build }}
      run: |
        echo "::group::Invoke build script '${_INPUT_BUILD_SCRIPT}'"
        "${_INPUT_BUILD_SCRIPT}"
        echo "::endgroup::"

        if [[ "${_INPUT_COPY_BUILD}" != "" ]] ; then
            echo "::group::Copy the build files"
            mkdir -p "${_INPUT_COPY_BUILD}"
            rsync -avc --delete-after "${_INPUT_BUILD_HTML}/" "${_INPUT_COPY_BUILD}/"
            echo "build-html=${_INPUT_COPY_BUILD}" >> ${GITHUB_OUTPUT}
            echo "::endgroup::"
        else
            echo "build-html=${_INPUT_BUILD_HTML}" >> ${GITHUB_OUTPUT}
        fi

    - name: Upload artifact
      if: fromJSON(inputs.artifact-upload)
      uses: actions/upload-artifact@v4
      with:
        path: ${{ steps.build.outputs.build-html }}
        name: ${{ inputs.artifact-name }}
        retention-days: ${{ fromJSON(inputs.artifact-retention-days) }}

    - name: Output step
      id: outs
      shell: bash
      env:
        _VALUE_HASH: ${{ hashFiles(steps.build.outputs.build-html) }}
        _VALUE_RUN_ID: ${{ github.run_id }}
        _VALUE_REPOSITORY: ${{ github.repository }}
        _VALUE_ARTIFACT_UPLOAD: ${{ inputs.artifact-upload }}
      run: |
        echo "hash=${_VALUE_HASH}" >> ${GITHUB_OUTPUT}
        if [[ "${_VALUE_ARTIFACT_UPLOAD}" == "true" ]] ; then
            echo "artifact-url=https://github.com/${_VALUE_REPOSITORY}/actions/runs/${_VALUE_RUN_ID}" >> ${GITHUB_OUTPUT}
        fi
